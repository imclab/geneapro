<% var section implementation %>

<% block style %>
<% endblock style %>

<% block container %>
<h2>Gentech</h2>

<p>
The GenTech model makes for an interesting read, and is full of very good ideas
(of course, it was written by professionals).  However, there are a number of things
that I found under-described, and for which the software developer has to make guesses. 
</p>
<p>
The idea behind this model is that all genealogical assertions about a person or a place come from either a source or a previous insertion, and we want complete traceability from source to assertions.
</p>
<a href="datamodel.pdf" style="float:right">
  <img src="datamodel.png">
</a>
<p>
Here is the database schema underneath geneapro. We use a standard SQL database (django supports various DBMS, although by default geneapro is configured for sqlite). The queries are carefully optimized to limit their count and keep geneapro fast.
</p>
<p>
<i>This image was generated with</i>
  <pre>./manage.py graph_models geneapro > t.dot
dot -Tpdf -o datamodel.pdf t.dot
   </pre>
</p>


<h3>Children</h3>

<p>
The GenTech data model was meant to have one single place to store any given data (as opposed to Gedcom where a lot of things are still stored inside notes).
</p>

<p>
The Gedcom's notion of family no longer exists (good riddance), since it can in fact be calculated from other relationships (marriages, children,...)
</p>

<p>
I can think of several ways to store the fact that Y is a child of X:
</p>

<ul>
  <li>Create a Group called "children of X", and include Y in that group</li>
  <li>Create an assertion linking X as "father of" Y.<br>
      But apparently assertions between two personas are discouraged,
      except to indicate that two persons represent the same physical person.</li>
  <li> Create an event to represent the birth of Y.<br>
      Mark Y as having the "principal" role for this event,
      and "X" as having the role "father".<br>
      The advantage here is that the event also stores the location and date of the
      birth without having to duplicate that info elsewhere.<br>
      This is approach that was chosen in GeneaPro.</li>
</ul>

<h3>Individual sources</h3>

<p>
In GEDCOM, sources can be set directly on individuals, without going through
an event. This in general occurs when a person is cited in a source (so
we know her name, but not much else).
</p>
<p>
In Geneapro, we store those as CENS (Census) events, using the source for
that event.
</p>

<h3>Event notes</h3>

<p>
In GEDCOM, notes can be associated with events. It isn't clear how these
are represented in the GENTECH data model.
It would be tempting to add the note into the name of the event, but then
this will be lost if we export to GEDCOM again. We do not add a
"comment/note" field to Event either, since this would not be linked
through an assertion (or a source).
</p>

<h3>Open questions</h3>

<ul>
  <li>How to store images for places ?<br>
      We need to go through a source, to indicate where the image comes
      from. The source itself has a place, so we could simply create a new
      source, set it for that place, and associate representations for it.
      <br>
      Such a source is not linked to a person via an assertion, so we know
      it is stricly about its <i>subject-place</i> (field defined in GENTECH).
      <br>
      Such sources can be used to store the history of a place, old or
      recent images,...<br>
      However, this should not be used to store old names for places. In
      this case, GENTECH recommends storing the old name as a place of its
      own, with an existence-date. (But then I am not sure how to link from
      these historial names to the current corresponding places).
  </li>
  <li>How to store notes for events and individuals?</li>
</ul>

<% endblock container %>
